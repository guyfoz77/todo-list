(()=>{"use strict";var e={d:(t,o)=>{for(var d in o)e.o(o,d)&&!e.o(t,d)&&Object.defineProperty(t,d,{enumerable:!0,get:o[d]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{IK:()=>o,Hv:()=>d});class o{static projects=[];constructor(e,t){this.name=e,this.projectIndex=t,this.todos=[]}todoDateEditor(e,t){this.todos[e].dueDate=t}todoDeleter(e){this.todos.splice(e,1)}static addNewTodo(e,t,o="No due date."){const d={title:e,projectIndex:t,completed:!1,dueDate:o};this.projects[t].todos.push(d)}}function d(e,t){o.projects.push(new o(e,t))}function r(e){for(;e.firstChild;)e.removeChild(e.firstChild)}function n(e,t,o,d){const r=document.createElement(e);return""!=t&&("object"==typeof t?t.forEach((e=>{r.classList.add(e)})):r.classList.add(t)),""!=o&&(r.value=o,r.textContent=o),""!=d&&(r.dataset.element=d),r}function c(e,o="No due date"){let d=n("div","todoCard","",""),r=n("div","completeButton","","");r.addEventListener("click",(()=>{d.classList.add("complete")}));let c=n("h2","",e,""),a=n("div","dateHolder","",""),s=n("h3","",o,"");a.append(s);let i=n("input","","","");return i.setAttribute("type","date"),i.value=o,i.addEventListener("blur",(e=>{const o=e.target.parentNode.parentNode.dataset.projectID,d=e.target.parentNode.parentNode.dataset.todoID;let r=i.value;t.Projects.projects[o].todoDateEditor(d,r),""!=r&&(s.textContent=`Due ${r}`),a.removeChild(a.firstChild),a.append(s)})),s.addEventListener("click",(()=>{a.removeChild(a.firstChild),a.append(i),i.focus()})),d.append(r,c,a),d}document.querySelector(".todoContainer");const a=document.querySelector(".projectList"),s=document.querySelector(".todoContainer");function i(){!function(){r(a);for(let e=0;e<o.projects.length;e++){let t=n("div","projectCard",o.projects[e].name,"");t.dataset.projectID=e,a.append(t)}}()}const l=document.querySelector(".newProjectButton"),p=document.querySelector(".newProjectInput"),u=document.querySelector(".projectList");l.addEventListener("click",(e=>{e.preventDefault(),""!=p.value&&(r(u),d(p.value),i(),p.value="")})),d("test project",0),o.addNewTodo("Test todo",0),o.addNewTodo("another test todo",0),d("second test project",1),o.addNewTodo("second test todo",1),o.addNewTodo("Yet another thing to do",1),console.log(o.projects),function(e){r(s);for(let e=0;e<o.projects[0].todos.length;e++){let t=c(o.projects[0].todos[e].title,o.projects[0].todos.dueDate);t.dataset.projectID=0,t.dataset.todoID=e,s.append(t)}}(),i()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,