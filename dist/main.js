(()=>{"use strict";let e=[];function t(e){window.localStorage.removeItem("projects"),window.localStorage.setItem("projects",JSON.stringify(e))}class o{constructor(e,t,o=[]){this.name=e,this.projectIndex=t,this.todos=o}static addNewTodo(o,d,a=""){const n={title:o,projectIndex:d,completed:!1,dueDate:a};e[d].todos.push(n),t(e)}static projectDeleter(o){e.splice(o,1),t(e)}static addNewProject(d,a){e.push(new o(d,a)),t(e)}markTodoCompleteToggle(o){this.todos[o].completed=!this.todos[o].completed,t(e)}todoDateEditor(o,d){this.todos[o].dueDate=d,t(e)}todoDeleter(o){this.todos.splice(o,1),t(e)}}let d=0;const a=document.querySelector(".projectList"),n=document.querySelector(".newProjectButton"),l=document.querySelector(".newProjectInput"),c=document.querySelector(".projectList"),r=document.querySelector(".todoList"),s=document.querySelector(".newTodoButton"),i=document.querySelector(".newTodoInput"),u=document.querySelector(".newTodoDate"),p=document.querySelector(".deleteComplete");function m(e){for(;e.firstChild;)e.removeChild(e.firstChild)}function v(e,t,o,d){const a=document.createElement(e);return""!=t&&("object"==typeof t?t.forEach((e=>{a.classList.add(e)})):a.classList.add(t)),""!=o&&(a.value=o,a.textContent=o),""!=d&&(a.dataset.element=d),a}function h(e){let t=v("div","projectCard",e,"");return t.addEventListener("click",(e=>{var t;t=e.target.dataset.projectID,d=t,f(),w(d)})),t}function f(){m(a);let t=[];for(let o=0;o<e.length;o++){let d=h(e[o].name);d.dataset.projectID=o,t.push(d)}t[d].classList.add("activeProject"),t.forEach((e=>{c.append(e)}))}function w(t){m(r);for(let o=0;o<e[t].todos.length;o++){let d=g(e[t].todos[o].title,e[t].todos[o].completed,e[t].todos[o].dueDate);d.dataset.projectID=t,d.dataset.todoID=o,r.append(d)}}function g(t,o,a){let n=v("div","todoCard","",""),l=v("div",["completeButton","material-symbols-outlined"],"","");l.addEventListener("click",(t=>{const o=t.target.parentNode.dataset.todoID;n.classList.toggle("complete"),l.classList.toggle("selected"),e[d].markTodoCompleteToggle(o)})),1==o&&(n.classList.add("complete"),l.classList.add("selected"));let c=v("h2","",t,""),r=v("div","dateHolder","",""),s=v("h3","","","");s.textContent=""==a?"No due date":`Due ${a}`,r.append(s);let i=v("input","","","");return i.setAttribute("type","date"),i.value=""==a?"":a,i.addEventListener("blur",(t=>{const o=t.target.parentNode.parentNode.dataset.projectID,d=t.target.parentNode.parentNode.dataset.todoID;let a=i.value;e[o].todoDateEditor(d,a),""!=a&&(s.textContent="",s.textContent=`Due ${a}`),r.removeChild(r.firstChild),r.append(s)})),s.addEventListener("click",(()=>{r.removeChild(r.firstChild),r.append(i),i.focus()})),n.append(l,c,r),n}function j(){!function(){let t=window.localStorage.getItem("projects"),d=JSON.parse(t);console.log(d);let a=[];for(let e=0;e<d.length;e++)a.push(new o(d[e].name,e,d[e].todos));e=a}(),f(),w(d)}n.addEventListener("click",(e=>{e.preventDefault(),""!=l.value&&(m(c),o.addNewProject(l.value),w(d),l.value="",f())})),s.addEventListener("click",(e=>{e.preventDefault(),""!=i.value&&(o.addNewTodo(i.value,d,u.value),j(),i.value="",u.value="")})),p.addEventListener("click",(t=>{t.preventDefault();for(let t=e[d].todos.length-1;t>=0;t--)1==e[d].todos[t].completed&&e[d].todoDeleter(t),j()})),null==window.localStorage.projects&&(o.addNewProject("test project",0),o.addNewTodo("Test todo",0),o.addNewTodo("another test todo",0),o.addNewProject("second test project",1),o.addNewTodo("second test todo",1),o.addNewTodo("Yet another thing to do",1)),j()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,