(()=>{"use strict";var e={d:(t,o)=>{for(var d in o)e.o(o,d)&&!e.o(t,d)&&Object.defineProperty(t,d,{enumerable:!0,get:o[d]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{I:()=>d,H:()=>n});let o=[];class d{constructor(e,t){this.name=e,this.projectIndex=t,this.todos=[]}static addNewTodo(e,t,d,n="No due date."){const r={title:e,projectIndex:t,todoIndex:d,completed:!1,dueDate:n};o[t].todos.push(r)}static projectDeleter(e){o.splice(e,1)}todoDateEditor(e,t){this.todos[e].dueDate=t}todoDeleter(e){this.todos.splice(e,1)}}function n(e,t){o.push(new d(e,t))}function r(e){for(;e.firstChild;)e.removeChild(e.firstChild)}function a(e,t,o,d){const n=document.createElement(e);return""!=t&&("object"==typeof t?t.forEach((e=>{n.classList.add(e)})):n.classList.add(t)),""!=o&&(n.value=o,n.textContent=o),""!=d&&(n.dataset.element=d),n}function c(e,o="No due date"){let d=a("div","todoCard","",""),n=a("div","completeButton","","");n.addEventListener("click",(()=>{d.classList.add("complete")}));let r=a("h2","",e,""),c=a("div","dateHolder","",""),s=a("h3","",o,"");c.append(s);let l=a("input","","","");return l.setAttribute("type","date"),l.value=o,l.addEventListener("blur",(e=>{const o=e.target.parentNode.parentNode.dataset.projectID,d=e.target.parentNode.parentNode.dataset.todoID;let n=l.value;t.Projects.projects[o].todoDateEditor(d,n),""!=n&&(s.textContent=`Due ${n}`),c.removeChild(c.firstChild),c.append(s)})),s.addEventListener("click",(()=>{c.removeChild(c.firstChild),c.append(l),l.focus()})),d.append(n,r,c),d}document.querySelector(".todoContainer");const s=document.querySelector(".projectList"),l=document.querySelector(".todoContainer");function i(){!function(){r(s);for(let e=0;e<o.length;e++){let t=a("div","projectCard",o[e].name,"");t.dataset.projectID=e,s.append(t)}}()}const u=document.querySelector(".newProjectButton"),p=document.querySelector(".newProjectInput"),f=document.querySelector(".projectList");u.addEventListener("click",(e=>{e.preventDefault(),""!=p.value&&(r(f),n(p.value),i(),p.value="")})),n("test project",0),d.addNewTodo("Test todo",0,0),d.addNewTodo("another test todo",0,1),n("second test project",1),d.addNewTodo("second test todo",1,0),d.addNewTodo("Yet another thing to do",1,1),console.log(d.projects),function(e){r(l);for(let e=0;e<o[0].todos.length;e++){let t=c(o[0].todos[e].title,o[0].todos.dueDate);t.dataset.projectID=0,t.dataset.todoID=e,l.append(t)}}(),i()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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MEJBQTJCLEVBQUcsR0FDakR5RCxRQUFRQyxJQUFJaEUsRUFBUUQsVURSYixTQUF5QmtFLEdBQzVCOUMsRUFBYSxHQUNiLElBQUssSUFBSW9DLEVBQUksRUFBR0EsRUFBSXhELEVDU1IsR0RUcUNNLE1BQU1tRCxPQUFRRCxJQUFLLENBQ2hFLElBQUlXLEVBQWNoQyxFQUFnQm5DLEVDUTFCLEdEUnVETSxNQUFNa0QsR0FBR2hELE1BQU9SLEVDUXZFLEdEUm9HTSxNQUFNSSxTQUNsSHlELEVBQVlqQyxRQUFRWSxVQ09aLEVETlJxQixFQUFZakMsUUFBUWUsT0FBU08sRUFDN0IsRUFBY2QsT0FBT3lCLEVBQ3pCLENBQ0osQ0NHQUMsR0FDQWIsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9wcm9qZWN0U3RvcmFnZS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvcHJvamVjdE1hbmFnZXIuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2RvbUNvbnRyb2xsZXIuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3BhZ2VMb2FkZXIuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSByZXF1aXJlIHNjb3BlXG52YXIgX193ZWJwYWNrX3JlcXVpcmVfXyA9IHt9O1xuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiZXhwb3J0IGxldCBwcm9qZWN0cyA9IFtdOyIsImltcG9ydCB7IHByb2plY3RzIH0gZnJvbSBcIi4vcHJvamVjdFN0b3JhZ2VcIjtcblxuZXhwb3J0IGNsYXNzIFByb2plY3Qge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIHByb2plY3RJbmRleCkge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLnByb2plY3RJbmRleCA9IHByb2plY3RJbmRleDtcbiAgICAgICAgdGhpcy50b2RvcyA9IFtdO1xuICAgIH1cblxuICAgIHN0YXRpYyBhZGROZXdUb2RvKHRpdGxlLCBwcm9qZWN0SW5kZXgsIHRvZG9JbmRleCwgZHVlRGF0ZSA9ICdObyBkdWUgZGF0ZS4nKSB7XG4gICAgICAgIGNvbnN0IHRvZG8gPSB7XG4gICAgICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgICAgICBwcm9qZWN0SW5kZXg6IHByb2plY3RJbmRleCxcbiAgICAgICAgICAgIHRvZG9JbmRleDogdG9kb0luZGV4LFxuICAgICAgICAgICAgY29tcGxldGVkOiBmYWxzZSxcbiAgICAgICAgICAgIGR1ZURhdGU6IGR1ZURhdGVcbiAgICAgICAgfVxuICAgICAgICBwcm9qZWN0c1twcm9qZWN0SW5kZXhdLnRvZG9zLnB1c2godG9kbyk7XG4gICAgfVxuXG4gICAgc3RhdGljIHByb2plY3REZWxldGVyKHByb2plY3RJbmRleCkge1xuICAgICAgICBwcm9qZWN0cy5zcGxpY2UocHJvamVjdEluZGV4LCAxKTtcbiAgICB9XG5cbiAgICB0b2RvRGF0ZUVkaXRvcih0b2RvSW5kZXgsIG5ld0RhdGUpIHtcbiAgICAgICAgdGhpcy50b2Rvc1t0b2RvSW5kZXhdLmR1ZURhdGUgPSBuZXdEYXRlO1xuICAgIH1cblxuICAgIHRvZG9EZWxldGVyKHRvZG9JbmRleCkge1xuICAgICAgICB0aGlzLnRvZG9zLnNwbGljZSh0b2RvSW5kZXgsIDEpO1xuICAgIH1cbiAgICBcbiAgICBcblxufVxuXG4vLyBmdW5jdGlvbiBwcm9qZWN0QnVpbGRlcihuYW1lLCBwcm9qZWN0SW5kZXgpIHsgLy9mYWN0b3J5IGZ1bmN0aW9uIHRvIGJ1aWxkIG5ldyBwcm9qZWN0IG9iamVjdC5cbi8vICAgICBsZXQgdG9kb3MgPSBbXTtcbi8vICAgICBmdW5jdGlvbiB0b2RvRGF0ZUVkaXRvcih0b2RvSW5kZXgsIG5ld0RhdGUpIHtcbi8vICAgICAgICAgdGhpcy50b2Rvc1t0b2RvSW5kZXhdLmR1ZURhdGUgPSBuZXdEYXRlO1xuLy8gICAgIH1cbi8vICAgICBmdW5jdGlvbiB0b2RvRGVsZXRlcih0b2RvSUQpe1xuLy8gICAgICAgICB0aGlzLnRvZG9zLnNwbGljZSh0b2RvSUQsIDEpO1xuLy8gICAgIH1cbi8vICAgICByZXR1cm4ge1xuLy8gICAgICAgICBuYW1lOiBuYW1lLFxuLy8gICAgICAgICBwcm9qZWN0SW5kZXg6IHByb2plY3RJbmRleCxcbi8vICAgICAgICAgdG9kb3M6IHRvZG9zLFxuLy8gICAgICAgICB0b2RvRGF0ZUVkaXRvcjogdG9kb0RhdGVFZGl0b3IsXG4vLyAgICAgICAgIHRvZG9EZWxldGVyOiB0b2RvRGVsZXRlclxuLy8gICAgIH1cbi8vIH1cbi8vIGZ1bmN0aW9uIHRvZG9CdWlsZGVyKHRpdGxlLCBwcm9qZWN0SW5kZXgsIHRvZG9JbmRleCwgZHVlRGF0ZSA9ICdObyBkdWUgZGF0ZS4nKSB7IC8vcHJvamVjdEluZGV4IHJlZmVycyB0byB0aGUgcG9zaXRpb24gb2YgdGhlIHBhcmVudCBwcm9qZWN0IGluIHRoZSBhcnJheSBvZiBwcm9qZWN0cy5cbi8vICAgICByZXR1cm4ge1xuLy8gICAgICAgICB0aXRsZTogdGl0bGUsXG4vLyAgICAgICAgIHByb2plY3RJbmRleDogcHJvamVjdEluZGV4LFxuLy8gICAgICAgICB0b2RvSW5kZXg6IHRvZG9JbmRleCxcbi8vICAgICAgICAgY29tcGxldGVkOiBmYWxzZSxcbi8vICAgICAgICAgZHVlRGF0ZTogZHVlRGF0ZVxuLy8gICAgIH1cbi8vIH1cbi8vIGV4cG9ydCBmdW5jdGlvbiBwcm9qZWN0RGVsZXRlcihwcm9qZWN0SW5kZXgpIHtcbi8vICAgICBQcm9qZWN0LnByb2plY3RzLnNwbGljZShwcm9qZWN0SW5kZXgsIDEpO1xuLy8gfVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkTmV3UHJvamVjdChuYW1lLCBwcm9qZWN0SW5kZXgpIHtcbiAgICBwcm9qZWN0cy5wdXNoKG5ldyBQcm9qZWN0KG5hbWUsIHByb2plY3RJbmRleCkpO1xufVxuLy8gZXhwb3J0IGZ1bmN0aW9uIGFkZE5ld1RvZG8odGl0bGUsIHByb2plY3RJbmRleCwgdG9kb0luZGV4LCBkdWVEYXRlID0gJ05vIGR1ZSBkYXRlLicpIHtcbi8vICAgICBQcm9qZWN0LnByb2plY3RzW3Byb2plY3RJbmRleF0udG9kb3MucHVzaCh0b2RvQnVpbGRlcih0aXRsZSwgcHJvamVjdEluZGV4LCB0b2RvSW5kZXgsIGR1ZURhdGUpKTtcbi8vIH0iLCJpbXBvcnQgeyBQcm9qZWN0cyB9IGZyb20gXCIuL3Byb2plY3RNYW5hZ2VyXCI7XG5cbmNvbnN0IHRvZG9Db250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9kb0NvbnRhaW5lcicpO1xuXG5leHBvcnQgZnVuY3Rpb24gY2xlYXJFbGVtZW50KGVsZW1lbnQpIHtcbiAgICB3aGlsZSAoZWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICAgIGVsZW1lbnQucmVtb3ZlQ2hpbGQoZWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlbGVtZW50QnVpbGRlcihlbGVtZW50LCBjbGFzc0xpc3QsIHRleHRDb250ZW50LCBkYXRhTmFtZSkgeyAgLy9lbGVtZW50IGJ1aWxkZXIgY29waWVkIGFuZCBtb2RpZmllZCBmcm9tIHByZXZpb3VzIHByb2plY3QuXG4gICAgY29uc3QgeGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGVsZW1lbnQpO1xuICAgIGlmIChjbGFzc0xpc3QgIT0gJycpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGFzc0xpc3QgPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIGNsYXNzTGlzdC5mb3JFYWNoKGNsYXNzTGFiZWwgPT4ge1xuICAgICAgICAgICAgICAgIHhlbGVtZW50LmNsYXNzTGlzdC5hZGQoY2xhc3NMYWJlbCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHhlbGVtZW50LmNsYXNzTGlzdC5hZGQoY2xhc3NMaXN0KTtcbiAgICB9XG4gICAgaWYgKHRleHRDb250ZW50ICE9ICcnKSB7XG4gICAgICAgIHhlbGVtZW50LnZhbHVlID0gdGV4dENvbnRlbnQ7XG4gICAgICAgIHhlbGVtZW50LnRleHRDb250ZW50ID0gdGV4dENvbnRlbnQ7XG4gICAgfVxuICAgIGlmIChkYXRhTmFtZSAhPSAnJykgeGVsZW1lbnQuZGF0YXNldC5lbGVtZW50ID0gZGF0YU5hbWU7XG4gICAgcmV0dXJuIHhlbGVtZW50O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcHJvamVjdENhcmRCdWlsZGVyKG5hbWUpIHtcbiAgICBsZXQgcHJvamVjdENhcmQgPSBlbGVtZW50QnVpbGRlcignZGl2JywgJ3Byb2plY3RDYXJkJywgbmFtZSwgJycpO1xuICAgIHJldHVybiBwcm9qZWN0Q2FyZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRvZG9DYXJkQnVpbGRlcih0aXRsZSwgZHVlRGF0ZSA9ICdObyBkdWUgZGF0ZScpIHsgXG4gICAgbGV0IHRvZG9DYXJkID0gZWxlbWVudEJ1aWxkZXIoJ2RpdicsICd0b2RvQ2FyZCcsICcnLCAnJyk7XG4gICAgbGV0IGNvbXBsZXRlID0gZWxlbWVudEJ1aWxkZXIoJ2RpdicsICdjb21wbGV0ZUJ1dHRvbicsICcnLCAnJyk7XG4gICAgICAgIGNvbXBsZXRlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgdG9kb0NhcmQuY2xhc3NMaXN0LmFkZCgnY29tcGxldGUnKTtcbiAgICAgICAgfSlcbiAgICBsZXQgdG9kb1RpdGxlID0gZWxlbWVudEJ1aWxkZXIoJ2gyJywgJycsIHRpdGxlLCAnJyk7XG4gICAgbGV0IHRvZG9EYXRlSG9sZGVyID0gZWxlbWVudEJ1aWxkZXIoJ2RpdicsICdkYXRlSG9sZGVyJywgJycsICcnKTtcbiAgICBsZXQgdG9kb0R1ZURhdGUgPSBlbGVtZW50QnVpbGRlcignaDMnLCAnJywgZHVlRGF0ZSwgJycpO1xuICAgIHRvZG9EYXRlSG9sZGVyLmFwcGVuZCh0b2RvRHVlRGF0ZSk7XG4gICAgbGV0IHRvZG9EdWVEYXRlUGlja2VyID0gZWxlbWVudEJ1aWxkZXIoJ2lucHV0JywgJycsICcnLCAnJyk7XG4gICAgICAgIHRvZG9EdWVEYXRlUGlja2VyLnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJkYXRlXCIpO1xuICAgICAgICB0b2RvRHVlRGF0ZVBpY2tlci52YWx1ZSA9IGR1ZURhdGVcbiAgICAgICAgICAgIHRvZG9EdWVEYXRlUGlja2VyLmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCAoZSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHByb2plY3RJRCA9IGUudGFyZ2V0LnBhcmVudE5vZGUucGFyZW50Tm9kZS5kYXRhc2V0LnByb2plY3RJRDtcbiAgICAgICAgICAgICAgICBjb25zdCB0b2RvSUQgPSBlLnRhcmdldC5wYXJlbnROb2RlLnBhcmVudE5vZGUuZGF0YXNldC50b2RvSUQ7XG4gICAgICAgICAgICAgICAgbGV0IG5ld0R1ZURhdGUgPSB0b2RvRHVlRGF0ZVBpY2tlci52YWx1ZTtcbiAgICAgICAgICAgICAgICBQcm9qZWN0cy5wcm9qZWN0c1twcm9qZWN0SURdLnRvZG9EYXRlRWRpdG9yKHRvZG9JRCwgbmV3RHVlRGF0ZSk7XG4gICAgICAgICAgICAgICAgaWYgKG5ld0R1ZURhdGUgIT0gJycpIHRvZG9EdWVEYXRlLnRleHRDb250ZW50ID0gYER1ZSAke25ld0R1ZURhdGV9YDtcbiAgICAgICAgICAgICAgICB0b2RvRGF0ZUhvbGRlci5yZW1vdmVDaGlsZCh0b2RvRGF0ZUhvbGRlci5maXJzdENoaWxkKTtcbiAgICAgICAgICAgICAgICB0b2RvRGF0ZUhvbGRlci5hcHBlbmQodG9kb0R1ZURhdGUpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgdG9kb0R1ZURhdGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICB0b2RvRGF0ZUhvbGRlci5yZW1vdmVDaGlsZCh0b2RvRGF0ZUhvbGRlci5maXJzdENoaWxkKTtcbiAgICAgICAgICAgIHRvZG9EYXRlSG9sZGVyLmFwcGVuZCh0b2RvRHVlRGF0ZVBpY2tlcik7XG4gICAgICAgICAgICB0b2RvRHVlRGF0ZVBpY2tlci5mb2N1cygpO1xuICAgICAgICB9KVxuICAgIHRvZG9DYXJkLmFwcGVuZChjb21wbGV0ZSwgdG9kb1RpdGxlLCB0b2RvRGF0ZUhvbGRlcik7XG4gICAgcmV0dXJuIHRvZG9DYXJkO1xufVxuIiwiaW1wb3J0IHsgUHJvamVjdCB9IGZyb20gXCIuL3Byb2plY3RNYW5hZ2VyXCI7XG5pbXBvcnQgeyBwcm9qZWN0cyB9IGZyb20gXCIuL3Byb2plY3RTdG9yYWdlXCI7XG5pbXBvcnQgeyBlbGVtZW50QnVpbGRlciwgcHJvamVjdENhcmRCdWlsZGVyLCB0b2RvQ2FyZEJ1aWxkZXIsIGNsZWFyRWxlbWVudCB9IGZyb20gXCIuL2RvbUNvbnRyb2xsZXJcIjtcblxuY29uc3QgcHJvamVjdExpc3RDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdExpc3QnKTtcbmNvbnN0IHRvZG9Db250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9kb0NvbnRhaW5lcicpO1xuXG5mdW5jdGlvbiBwcm9qZWN0TGlzdEJ1aWxkZXIoKSB7XG4gICAgY2xlYXJFbGVtZW50KHByb2plY3RMaXN0Q29udGFpbmVyKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2plY3RzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxldCBuZXdQcm9qZWN0Q2FyZCA9IHByb2plY3RDYXJkQnVpbGRlcihwcm9qZWN0c1tpXS5uYW1lKTtcbiAgICAgICAgbmV3UHJvamVjdENhcmQuZGF0YXNldC5wcm9qZWN0SUQgPSBpO1xuICAgICAgICBwcm9qZWN0TGlzdENvbnRhaW5lci5hcHBlbmQobmV3UHJvamVjdENhcmQpO1xuICAgIH1cbn1cblxuLy90b2RvQ2FyZEJ1aWxkZXIodGl0bGUsIGlkLCBkdWVEYXRlID0gJ05vIGR1ZSBkYXRlJylcbmV4cG9ydCBmdW5jdGlvbiB0b2RvTGlzdEJ1aWxkZXIoYWN0aXZlUHJvamVjdEluZGV4KSB7XG4gICAgY2xlYXJFbGVtZW50KHRvZG9Db250YWluZXIpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcHJvamVjdHNbYWN0aXZlUHJvamVjdEluZGV4XS50b2Rvcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBsZXQgbmV3VG9kb0NhcmQgPSB0b2RvQ2FyZEJ1aWxkZXIocHJvamVjdHNbYWN0aXZlUHJvamVjdEluZGV4XS50b2Rvc1tpXS50aXRsZSwgcHJvamVjdHNbYWN0aXZlUHJvamVjdEluZGV4XS50b2Rvcy5kdWVEYXRlKTtcbiAgICAgICAgbmV3VG9kb0NhcmQuZGF0YXNldC5wcm9qZWN0SUQgPSBhY3RpdmVQcm9qZWN0SW5kZXg7XG4gICAgICAgIG5ld1RvZG9DYXJkLmRhdGFzZXQudG9kb0lEID0gaTtcbiAgICAgICAgdG9kb0NvbnRhaW5lci5hcHBlbmQobmV3VG9kb0NhcmQpO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhZ2VMb2FkZXIoKSB7XG4gICAgcHJvamVjdExpc3RCdWlsZGVyKCk7XG59IiwiaW1wb3J0IHsgUHJvamVjdCwgYWRkTmV3UHJvamVjdCwgYWRkTmV3VG9kbyB9IGZyb20gXCIuL3Byb2plY3RNYW5hZ2VyXCI7XG5pbXBvcnQgeyBjbGVhckVsZW1lbnQgfSBmcm9tIFwiLi9kb21Db250cm9sbGVyXCI7XG5pbXBvcnQgeyBwYWdlTG9hZGVyLCB0b2RvTGlzdEJ1aWxkZXIgfSBmcm9tIFwiLi9wYWdlTG9hZGVyXCI7XG5cbmNvbnN0IG5ld1Byb2plY3RCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmV3UHJvamVjdEJ1dHRvbicpO1xuY29uc3QgcHJvamVjdElucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5ld1Byb2plY3RJbnB1dCcpO1xuY29uc3QgcHJvamVjdExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvamVjdExpc3QnKTtcblxubGV0IGFjdGl2ZVByb2plY3RJbmRleCA9IDA7XG5cbm5ld1Byb2plY3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHsgLy93aWxsIG5lZWQgdG8gcmV3b3JrIHRoaXMgdG8gYWRkIHRvIHN0b3JhZ2UgYXJyYXkgcmF0aGVyIHRoYW4gZGlyZWN0bHkgdG8gRE9NXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGlmIChwcm9qZWN0SW5wdXQudmFsdWUgPT0gJycgfHwgbnVsbCkgcmV0dXJuO1xuICAgIGNsZWFyRWxlbWVudChwcm9qZWN0TGlzdCk7XG4gICAgYWRkTmV3UHJvamVjdChwcm9qZWN0SW5wdXQudmFsdWUpO1xuICAgIHBhZ2VMb2FkZXIoKTtcbiAgICBwcm9qZWN0SW5wdXQudmFsdWUgPSAnJztcbn0pXG5cbmFkZE5ld1Byb2plY3QoJ3Rlc3QgcHJvamVjdCcsIDApO1xuUHJvamVjdC5hZGROZXdUb2RvKCdUZXN0IHRvZG8nLCAwLCAwKTtcblByb2plY3QuYWRkTmV3VG9kbygnYW5vdGhlciB0ZXN0IHRvZG8nLCAwLCAxKTtcbmFkZE5ld1Byb2plY3QoJ3NlY29uZCB0ZXN0IHByb2plY3QnLCAxKTtcblByb2plY3QuYWRkTmV3VG9kbygnc2Vjb25kIHRlc3QgdG9kbycsIDEsIDApO1xuUHJvamVjdC5hZGROZXdUb2RvKCdZZXQgYW5vdGhlciB0aGluZyB0byBkbycsIDEsIDEpO1xuY29uc29sZS5sb2coUHJvamVjdC5wcm9qZWN0cyk7XG5cblxudG9kb0xpc3RCdWlsZGVyKDApO1xucGFnZUxvYWRlcigpO1xuIl0sIm5hbWVzIjpbIl9fd2VicGFja19yZXF1aXJlX18iLCJleHBvcnRzIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJvYmoiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInByb2plY3RzIiwiUHJvamVjdCIsImNvbnN0cnVjdG9yIiwibmFtZSIsInByb2plY3RJbmRleCIsInRoaXMiLCJ0b2RvcyIsImFkZE5ld1RvZG8iLCJ0aXRsZSIsInRvZG9JbmRleCIsImR1ZURhdGUiLCJ0b2RvIiwiY29tcGxldGVkIiwicHVzaCIsInByb2plY3REZWxldGVyIiwic3BsaWNlIiwidG9kb0RhdGVFZGl0b3IiLCJuZXdEYXRlIiwidG9kb0RlbGV0ZXIiLCJhZGROZXdQcm9qZWN0IiwiY2xlYXJFbGVtZW50IiwiZWxlbWVudCIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImVsZW1lbnRCdWlsZGVyIiwiY2xhc3NMaXN0IiwidGV4dENvbnRlbnQiLCJkYXRhTmFtZSIsInhlbGVtZW50IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiZm9yRWFjaCIsImNsYXNzTGFiZWwiLCJhZGQiLCJkYXRhc2V0IiwidG9kb0NhcmRCdWlsZGVyIiwidG9kb0NhcmQiLCJjb21wbGV0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0b2RvVGl0bGUiLCJ0b2RvRGF0ZUhvbGRlciIsInRvZG9EdWVEYXRlIiwiYXBwZW5kIiwidG9kb0R1ZURhdGVQaWNrZXIiLCJzZXRBdHRyaWJ1dGUiLCJlIiwicHJvamVjdElEIiwidGFyZ2V0IiwicGFyZW50Tm9kZSIsInRvZG9JRCIsIm5ld0R1ZURhdGUiLCJQcm9qZWN0cyIsImZvY3VzIiwicXVlcnlTZWxlY3RvciIsInByb2plY3RMaXN0Q29udGFpbmVyIiwicGFnZUxvYWRlciIsImkiLCJsZW5ndGgiLCJuZXdQcm9qZWN0Q2FyZCIsInByb2plY3RMaXN0QnVpbGRlciIsIm5ld1Byb2plY3RCdXR0b24iLCJwcm9qZWN0SW5wdXQiLCJwcm9qZWN0TGlzdCIsInByZXZlbnREZWZhdWx0IiwiY29uc29sZSIsImxvZyIsImFjdGl2ZVByb2plY3RJbmRleCIsIm5ld1RvZG9DYXJkIiwidG9kb0xpc3RCdWlsZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==