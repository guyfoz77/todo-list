(()=>{"use strict";let t=[];function e(e,o){t.push(function(t,e){return{name:t,projectIndex:e,todos:[],todoDateEditor:function(t,e){this.todos[t].dueDate=e}}}(e,o))}function o(e,o,d,n="No due date."){t[o].todos.push(function(t,e,o,d="No due date."){return{title:t,projectIndex:e,todoIndex:o,dueDate:d}}(e,o,d,n))}function d(t){for(;t.firstChild;)t.removeChild(t.firstChild)}function n(t,e,o,d){const n=document.createElement(t);return""!=e&&("object"==typeof e?e.forEach((t=>{n.classList.add(t)})):n.classList.add(e)),""!=o&&(n.value=o,n.textContent=o),""!=d&&(n.dataset.element=d),n}function r(e,o="No due date"){let d=n("div","todoCard","",""),r=n("div","completeButton","","");r.addEventListener("click",(()=>{d.classList.add("complete")}));let a=n("h2","",e,""),c=n("div","dateHolder","",""),u=n("h3","",o,"");c.append(u);let s=n("input","","","");return s.setAttribute("type","date"),s.value=o,s.addEventListener("blur",(e=>{const o=e.target.parentNode.parentNode.dataset.projectID,d=e.target.parentNode.parentNode.dataset.todoID;let n=s.value;t[o].todoDateEditor(d,n),""!=n&&(u.textContent=`Due ${n}`),c.removeChild(c.firstChild),c.append(u)})),u.addEventListener("click",(()=>{c.removeChild(c.firstChild),c.append(s),s.focus()})),d.append(r,a,c),d}document.querySelector(".todoContainer");const a=document.querySelector(".projectList"),c=document.querySelector(".todoContainer");function u(){!function(){d(a);for(let e=0;e<t.length;e++){let o=n("div","projectCard",t[e].name,"");o.dataset.projectID=e,a.append(o)}}()}const s=document.querySelector(".newProjectButton"),i=document.querySelector(".newProjectInput"),l=document.querySelector(".projectList");s.addEventListener("click",(o=>{o.preventDefault(),""!=i.value&&(d(l),e(i.value),u(),i.value="",console.log(t))})),e("test project",0),o("Test todo",0,0),o("another test todo",0,1),e("second test project",1),o("second test todo",1,0),o("Yet another thing to do",1,1),console.log(t),function(e){d(c);for(let e=0;e<t[0].todos.length;e++){let o=r(t[0].todos[e].title,t[0].todos.dueDate);o.dataset.projectID=0,o.dataset.todoID=e,c.append(o)}}(),u()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,