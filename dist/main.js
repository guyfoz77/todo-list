(()=>{"use strict";let e=[];class t{constructor(e,t){this.name=e,this.projectIndex=t,this.todos=[]}static addNewTodo(t,o,d=""){const a={title:t,projectIndex:o,completed:!1,dueDate:d};e[o].todos.push(a)}static projectDeleter(t){e.splice(t,1)}static addNewProject(o,d){e.push(new t(o,d))}markTodoCompleteToggle(e){this.todos[e].completed=!this.todos[e].completed}todoDateEditor(e,t){this.todos[e].dueDate=t}todoDeleter(e){this.todos.splice(e,1)}}let o=0;const d=document.querySelector(".projectList"),a=document.querySelector(".newProjectButton"),c=document.querySelector(".newProjectInput"),n=document.querySelector(".projectList"),r=document.querySelector(".todoList"),l=document.querySelector(".newTodoButton"),s=document.querySelector(".newTodoInput"),i=document.querySelector(".newTodoDate"),u=document.querySelector(".deleteComplete");function p(e){for(;e.firstChild;)e.removeChild(e.firstChild)}function m(e,t,o,d){const a=document.createElement(e);return""!=t&&("object"==typeof t?t.forEach((e=>{a.classList.add(e)})):a.classList.add(t)),""!=o&&(a.value=o,a.textContent=o),""!=d&&(a.dataset.element=d),a}function v(e){let t=m("div","projectCard",e,"");return t.addEventListener("click",(e=>{var t;t=e.target.dataset.projectID,o=t,h(),f(o)})),t}function h(){p(d);let t=[];for(let o=0;o<e.length;o++){let d=v(e[o].name);d.dataset.projectID=o,t.push(d)}t[o].classList.add("activeProject"),t.forEach((e=>{n.append(e)}))}function f(t){p(r);for(let o=0;o<e[t].todos.length;o++){let d=D(e[t].todos[o].title,e[t].todos[o].completed,e[t].todos[o].dueDate);d.dataset.projectID=t,d.dataset.todoID=o,r.append(d)}}function D(t,d,a){let c=m("div","todoCard","",""),n=m("div",["completeButton","material-symbols-outlined"],"","");n.addEventListener("click",(t=>{const d=t.target.parentNode.dataset.todoID;c.classList.toggle("complete"),n.classList.toggle("selected"),e[o].markTodoCompleteToggle(d)})),1==d&&(c.classList.add("complete"),n.classList.add("selected"));let r=m("h2","",t,""),l=m("div","dateHolder","",""),s=m("h3","","","");s.textContent=""==a?"No due date":`Due ${a}`,l.append(s);let i=m("input","","","");return i.setAttribute("type","date"),i.value=""==a?"":a,i.addEventListener("blur",(t=>{const o=t.target.parentNode.parentNode.dataset.projectID,d=t.target.parentNode.parentNode.dataset.todoID;let a=i.value;e[o].todoDateEditor(d,a),""!=a&&(s.textContent="",s.textContent=`Due ${a}`),l.removeChild(l.firstChild),l.append(s)})),s.addEventListener("click",(()=>{l.removeChild(l.firstChild),l.append(i),i.focus()})),c.append(n,r,l),c}function j(){h(),f(o)}a.addEventListener("click",(e=>{e.preventDefault(),""!=c.value&&(p(n),t.addNewProject(c.value),f(o),c.value="",h())})),l.addEventListener("click",(e=>{e.preventDefault(),""!=s.value&&(t.addNewTodo(s.value,o,i.value),j(),s.value="",i.value="")})),u.addEventListener("click",(t=>{t.preventDefault();for(let t=e[o].todos.length-1;t>=0;t--)1==e[o].todos[t].completed&&e[o].todoDeleter(t),j()})),t.addNewProject("test project",0),t.addNewTodo("Test todo",0),t.addNewTodo("another test todo",0),t.addNewProject("second test project",1),t.addNewTodo("second test todo",1),t.addNewTodo("Yet another thing to do",1),console.log(e),j()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,