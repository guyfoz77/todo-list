(()=>{"use strict";let e=[];function t(e){window.localStorage.removeItem("projects"),window.localStorage.setItem("projects",JSON.stringify(e))}class o{constructor(e,t){this.name=e,this.projectIndex=t,this.todos=[]}static addNewTodo(o,d,a=""){const l={title:o,projectIndex:d,completed:!1,dueDate:a};e[d].todos.push(l),t(e)}static projectDeleter(o){e.splice(o,1),t(e)}static addNewProject(d,a){e.push(new o(d,a)),t(e)}markTodoCompleteToggle(e){this.todos[e].completed=!this.todos[e].completed}todoDateEditor(e,t){this.todos[e].dueDate=t}todoDeleter(e){this.todos.splice(e,1)}}let d=0;const a=document.querySelector(".projectList"),l=document.querySelector(".newProjectButton"),c=document.querySelector(".newProjectInput"),n=document.querySelector(".projectList"),r=document.querySelector(".todoList"),s=document.querySelector(".newTodoButton"),i=document.querySelector(".newTodoInput"),u=document.querySelector(".newTodoDate"),p=document.querySelector(".deleteComplete");function m(e){for(;e.firstChild;)e.removeChild(e.firstChild)}function v(e,t,o,d){const a=document.createElement(e);return""!=t&&("object"==typeof t?t.forEach((e=>{a.classList.add(e)})):a.classList.add(t)),""!=o&&(a.value=o,a.textContent=o),""!=d&&(a.dataset.element=d),a}function h(e){let t=v("div","projectCard",e,"");return t.addEventListener("click",(e=>{var t;t=e.target.dataset.projectID,d=t,f(),j(d)})),t}function f(){m(a);let t=[];for(let o=0;o<e.length;o++){let d=h(e[o].name);d.dataset.projectID=o,t.push(d)}t[d].classList.add("activeProject"),t.forEach((e=>{n.append(e)}))}function j(t){m(r);for(let o=0;o<e[t].todos.length;o++){let d=w(e[t].todos[o].title,e[t].todos[o].completed,e[t].todos[o].dueDate);d.dataset.projectID=t,d.dataset.todoID=o,r.append(d)}}function w(t,o,a){let l=v("div","todoCard","",""),c=v("div",["completeButton","material-symbols-outlined"],"","");c.addEventListener("click",(t=>{const o=t.target.parentNode.dataset.todoID;l.classList.toggle("complete"),c.classList.toggle("selected"),e[d].markTodoCompleteToggle(o)})),1==o&&(l.classList.add("complete"),c.classList.add("selected"));let n=v("h2","",t,""),r=v("div","dateHolder","",""),s=v("h3","","","");s.textContent=""==a?"No due date":`Due ${a}`,r.append(s);let i=v("input","","","");return i.setAttribute("type","date"),i.value=""==a?"":a,i.addEventListener("blur",(t=>{const o=t.target.parentNode.parentNode.dataset.projectID,d=t.target.parentNode.parentNode.dataset.todoID;let a=i.value;e[o].todoDateEditor(d,a),""!=a&&(s.textContent="",s.textContent=`Due ${a}`),r.removeChild(r.firstChild),r.append(s)})),s.addEventListener("click",(()=>{r.removeChild(r.firstChild),r.append(i),i.focus()})),l.append(c,n,r),l}function g(){!function(){let t=window.localStorage.getItem("projects");console.log(t);let o=JSON.parse(t);console.log(o),null!=o&&(e=o)}(),null==e&&e.push(o.addNewProject("Misc todos",0)),f(),j(d)}l.addEventListener("click",(e=>{e.preventDefault(),""!=c.value&&(m(n),o.addNewProject(c.value),j(d),c.value="",f())})),s.addEventListener("click",(e=>{e.preventDefault(),""!=i.value&&(o.addNewTodo(i.value,d,u.value),g(),i.value="",u.value="")})),p.addEventListener("click",(t=>{t.preventDefault();for(let t=e[d].todos.length-1;t>=0;t--)1==e[d].todos[t].completed&&e[d].todoDeleter(t),g()})),null==window.localStorage.projects&&(o.addNewProject("test project",0),o.addNewTodo("Test todo",0),o.addNewTodo("another test todo",0),o.addNewProject("second test project",1),o.addNewTodo("second test todo",1),o.addNewTodo("Yet another thing to do",1)),g()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,