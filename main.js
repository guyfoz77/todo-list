(()=>{"use strict";let e=[];class t{constructor(e,t){this.name=e,this.projectIndex=t,this.todos=[]}static addNewTodo(t,o,d=""){const n={title:t,projectIndex:o,completed:!1,dueDate:d};e[o].todos.push(n)}static projectDeleter(t){e.splice(t,1)}static addNewProject(o,d){e.push(new t(o,d))}todoDateEditor(e,t){this.todos[e].dueDate=t}todoDeleter(e){this.todos.splice(e,1)}}let o=0;const d=document.querySelector(".projectList"),n=document.querySelector(".newProjectButton"),a=document.querySelector(".newProjectInput"),r=document.querySelector(".projectList"),c=document.querySelector(".todoList"),s=document.querySelector(".newTodoButton"),l=document.querySelector(".newTodoInput"),u=document.querySelector(".newTodoDate");function i(e){for(;e.firstChild;)e.removeChild(e.firstChild)}function p(e,t,o,d){const n=document.createElement(e);return""!=t&&("object"==typeof t?t.forEach((e=>{n.classList.add(e)})):n.classList.add(t)),""!=o&&(n.value=o,n.textContent=o),""!=d&&(n.dataset.element=d),n}function v(e){let t=p("div","projectCard",e,"");return t.addEventListener("click",(e=>{var t;t=e.target.dataset.projectID,o=t,h(o)})),t}function h(t){i(c);for(let o=0;o<e[t].todos.length;o++){let d=f(e[t].todos[o].title,e[t].todos[o].dueDate);d.dataset.projectID=t,d.dataset.todoID=o,c.append(d)}}function f(t,o){let d=p("div","todoCard","",""),n=p("div","completeButton","","");n.addEventListener("click",(()=>{d.classList.add("complete")}));let a=p("h2","",t,""),r=p("div","dateHolder","",""),c=p("h3","","","");c.textContent=""==o?"No due date":`Due ${o}`,r.append(c);let s=p("input","","","");return s.setAttribute("type","date"),s.value=""==o?"":o,s.addEventListener("blur",(t=>{const o=t.target.parentNode.parentNode.dataset.projectID,d=t.target.parentNode.parentNode.dataset.todoID;let n=s.value;e[o].todoDateEditor(d,n),""!=n&&(c.textContent="",c.textContent=`Due ${n}`),r.removeChild(r.firstChild),r.append(c)})),c.addEventListener("click",(()=>{r.removeChild(r.firstChild),r.append(s),s.focus()})),d.append(n,a,r),d}function j(){!function(){i(d);for(let t=0;t<e.length;t++){let o=v(e[t].name);o.dataset.projectID=t,d.append(o)}}(),h(o)}n.addEventListener("click",(e=>{e.preventDefault(),""!=a.value&&(i(r),t.addNewProject(a.value),j(),a.value="")})),s.addEventListener("click",(e=>{e.preventDefault(),t.addNewTodo(l.value,o,u.value),j(),l.value="",u.value=""})),t.addNewProject("test project",0),t.addNewTodo("Test todo",0),t.addNewTodo("another test todo",0),t.addNewProject("second test project",1),t.addNewTodo("second test todo",1),t.addNewTodo("Yet another thing to do",1),console.log(e),j()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,