(()=>{"use strict";class t{constructor(t,e,o,n){this.title=t,this.description=e,this.dueDate=o,this.priority=n}}let e=[new t("Get kitchen cleaner","","tomorrow","high")];function o(t,e,o,n){const i=document.createElement(t);return""!=e&&("object"==typeof e?e.forEach((t=>{i.classList.add(t)})):i.classList.add(e)),""!=o&&(i.value=o,i.textContent=o),""!=n&&(i.dataset.element=n),i}function n(t,n,r,d,c){function a(t){var o,n,i;o=t.target.dataset.element,n=t.target.parentNode.dataset.index,i=t.target.value,e[n][o]=i,console.log(e)}const u=o("div","todoCard","","");u.dataset.index=c;const s=o("input","todoTitle",t,"title");s.addEventListener("blur",(t=>a(t)));const l=o("input","todoDescription",n,"description");l.addEventListener("blur",(t=>a(t)));const p=o("input","todoDueDate",r,"dueDate");p.type="date",p.addEventListener("blur",(t=>a(t)));const v=o("select",[d,"todoPriority"],`${d} priority`,"priority");v.setHTML('<option value="Low">Low</option><option value="Medium">Medium</option><option value="High">High</option>'),v.addEventListener("blur",(t=>a(t)));const y=o("button","delete","Delete","");return y.addEventListener("click",(t=>{var o;o=t.target.parentNode.dataset.index,e.splice(o,1),i(e)})),u.append(s,l,p,v,y),u}function i(t){const e=document.querySelector(".todosContainer");e.innerHTML="";for(let o=0;o<t.length;o++)e.appendChild(n(t[o].title,t[o].description,t[o].dueDate,t[o].priority,o))}document.querySelector("input[type=button]").addEventListener("click",(()=>{const o=document.querySelector(".newTodo"),n={todoTitle:document.querySelector("#todoTitle").value,todoDescription:document.querySelector("#description").value,todoDue:document.querySelector("#dueDate").value,todoPriority:document.querySelector("#priority").value};var r,d,c,a;r=n.todoTitle,d=n.todoDescription,c=n.todoDue,a=n.todoPriority,e.push(new t(r,d,c,a)),console.log(e),i(e),o.reset()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,